{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport { interval, concat, of } from 'rxjs';\nimport { map, take, combineAll, concatAll } from 'rxjs/operators';\nimport { collectionData } from 'rxfire/firestore';\nimport { tap } from 'rxjs/operators';\nvar arrayA = [\"a\", \"b\", \"c\"];\nvar arrayB = [\"1\", \"2\", \"3\"];\n\nvar changestate = function changestate() {\n  interval(3000).pipe(map(function (val) {\n    return of(val + 1);\n  }), concatAll(), take(1)).subscribe(function (val) {\n    var ars = [\"\".concat(val)];\n    arrayA = [].concat(_toConsumableArray(arrayA), ars);\n    demoCombineallNumber(arrayA);\n  });\n};\n\nvar manuager = function manuager() {\n  var _strGet = db.collection('books');\n\n  var vaule = collectionData(_strGet, 'id').pipe(tap(function (cities) {\n    return console.log('This is just an observable!');\n  }));\n  return vaule;\n};\n\nvar demoCombineall = function demoCombineall() {\n  interval(5000).pipe(take(2)).pipe(map(function (val) {\n    return interval(1000).pipe(map(function (i) {\n      return \"Result (\".concat(val, \"): \").concat(i);\n    }), take(5));\n  })).pipe(combineAll()).subscribe(function (x) {\n    return console.log(x);\n  });\n};\n\nvar demoCombineallNumber = function demoCombineallNumber() {\n  var arr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : arrayA;\n  var result = concat(arr, arrayB).pipe(combineAll());\n  changestate();\n  return result;\n};\n\nexport { manuager, demoCombineall, demoCombineallNumber };","map":{"version":3,"sources":["D:/SolutionReactJs/testRXJS/demo-rx/rxServices/rxPost.ts"],"names":["interval","concat","of","map","take","combineAll","concatAll","collectionData","tap","arrayA","arrayB","changestate","pipe","val","subscribe","ars","demoCombineallNumber","manuager","_strGet","db","collection","vaule","cities","console","log","demoCombineall","i","x","arr","result"],"mappings":";AACA,SAAgBA,QAAhB,EAAyCC,MAAzC,EAAiDC,EAAjD,QAA2D,MAA3D;AACA,SAASC,GAAT,EAAsBC,IAAtB,EAA4BC,UAA5B,EAAwCC,SAAxC,QAA+D,gBAA/D;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,GAAT,QAAoB,gBAApB;AAGA,IAAKC,MAAM,GAAC,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,CAAZ;AACA,IAAOC,MAAM,GAAC,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,CAAd;;AACA,IAAMC,WAAW,GAAC,SAAZA,WAAY,GAAI;AACpBX,EAAAA,QAAQ,CAAC,IAAD,CAAR,CAAeY,IAAf,CACET,GAAG,CAAC,UAAAU,GAAG;AAAA,WAAEX,EAAE,CAACW,GAAG,GAAC,CAAL,CAAJ;AAAA,GAAJ,CADL,EACuBP,SAAS,EADhC,EACoCF,IAAI,CAAC,CAAD,CADxC,EAEEU,SAFF,CAEY,UAAAD,GAAG,EAAE;AACf,QAAIE,GAAG,GAAC,WAAIF,GAAJ,EAAR;AACAJ,IAAAA,MAAM,gCAAKA,MAAL,GAAeM,GAAf,CAAN;AACAC,IAAAA,oBAAoB,CAACP,MAAD,CAApB;AACD,GAND;AAOD,CARD;;AAUA,IAAMQ,QAAQ,GAAG,SAAXA,QAAW,GAAI;AAEnB,MAAIC,OAAO,GAACC,EAAE,CAACC,UAAH,CAAc,OAAd,CAAZ;;AAEA,MAAIC,KAAK,GAAEd,cAAc,CAACW,OAAD,EAAU,IAAV,CAAd,CACVN,IADU,CAETJ,GAAG,CAAC,UAAAc,MAAM;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAY,6BAAZ,CAAJ;AAAA,GAAP,CAFM,CAAX;AAIA,SAAOH,KAAP;AAED,CAVD;;AAYA,IAAMI,cAAc,GAAG,SAAjBA,cAAiB,GAAI;AACzBzB,EAAAA,QAAQ,CAAC,IAAD,CAAR,CAAeY,IAAf,CAAoBR,IAAI,CAAC,CAAD,CAAxB,EAA6BQ,IAA7B,CACET,GAAG,CAAC,UAAAU,GAAG;AAAA,WACHb,QAAQ,CAAC,IAAD,CAAR,CAAeY,IAAf,CACET,GAAG,CAAC,UAAAuB,CAAC;AAAA,+BAAeb,GAAf,gBAAwBa,CAAxB;AAAA,KAAF,CADL,EAEEtB,IAAI,CAAC,CAAD,CAFN,CADG;AAAA,GAAJ,CADL,EAMGQ,IANH,CAOEP,UAAU,EAPZ,EAQES,SARF,CAQY,UAAAa,CAAC;AAAA,WAAIJ,OAAO,CAACC,GAAR,CAAYG,CAAZ,CAAJ;AAAA,GARb;AASD,CAVD;;AAYA,IAAMX,oBAAoB,GAAC,SAArBA,oBAAqB,GAAc;AAAA,MAAbY,GAAa,uEAATnB,MAAS;AACvC,MAAIoB,MAAM,GAAE5B,MAAM,CAAC2B,GAAD,EAAMlB,MAAN,CAAN,CAAoBE,IAApB,CAAyBP,UAAU,EAAnC,CAAZ;AAEAM,EAAAA,WAAW;AACX,SAAOkB,MAAP;AACD,CALD;;AAOA,SACEZ,QADF,EAEEQ,cAFF,EAGET,oBAHF","sourcesContent":["\r\nimport { range, interval, combineLatest, concat, of } from 'rxjs';\r\nimport { map, filter, take, combineAll, concatAll, scan } from 'rxjs/operators';\r\nimport { collectionData } from 'rxfire/firestore';\r\nimport { tap } from 'rxjs/operators';\r\nimport {loadDB } from '../../demo-rx/firebase/firebaseRx';\r\n\r\nlet  arrayA=[\"a\",\"b\",\"c\"];\r\nconst  arrayB=[\"1\",\"2\",\"3\"];\r\nconst changestate=()=>{\r\n  interval(3000).pipe(\r\n    map(val=>of(val+1)), concatAll(), take(1)\r\n  ).subscribe(val=>{\r\n    let ars=[`${val}`];\r\n    arrayA=[...arrayA,...ars]\r\n    demoCombineallNumber(arrayA);\r\n  })\r\n}\r\n\r\nconst manuager = ()=>{\r\n    \r\n  let _strGet=db.collection('books');\r\n\r\n  let vaule= collectionData(_strGet, 'id')\r\n  .pipe(\r\n    tap(cities => console.log('This is just an observable!'))\r\n  );\r\n  return vaule;\r\n  \r\n}\r\n\r\nconst demoCombineall = ()=>{\r\n  interval(5000).pipe(take(2)).pipe(\r\n    map(val =>\r\n        interval(1000).pipe(\r\n          map(i => `Result (${val}): ${i}`),\r\n          take(5)\r\n        )\r\n  )).pipe(\r\n    combineAll()\r\n  ).subscribe(x => console.log(x));\r\n}\r\n\r\nconst demoCombineallNumber=(arr=arrayA)=>{\r\n  var result= concat(arr, arrayB).pipe(combineAll());\r\n  \r\n  changestate();\r\n  return result;\r\n}\r\n\r\nexport {\r\n  manuager,\r\n  demoCombineall,\r\n  demoCombineallNumber\r\n} "]},"metadata":{},"sourceType":"module"}